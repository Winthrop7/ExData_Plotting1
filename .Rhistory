index <- ifelse(outcome == "heart attack", 11, ifelse(outcome == "heart failure", 17, 23))
#Read and coerce our dataset while suppressing warnings and removing NA's.
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data[,index] <- suppressWarnings(as.numeric(data[,index]))
data <- na.omit(data)
#Invalid state input or no observations
states <- table(data$State)
if (!state %in% names(states)) {
stop("invalid state")
}
#Slice our data by the given state and sort it by outcome and hospital name.
slice <- subset(data, State==state)
slice <- slice[order(slice[,index], na.last=TRUE),2]
slice <- na.omit(slice)
#Get hospital name with the lowest 30-day mortality rate.
slice[1]
}
rankhospital <- function(state, outcome, num="best") {
#Invalid outcome input type
if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) {
stop("invalid outcome")
}
#Get index for our given outcome string.
index <- ifelse(outcome == "heart attack", 11, ifelse(outcome == "heart failure", 17, 23))
#Read and coerce our dataset while suppressing warnings and removing NA's.
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data[,index] <- suppressWarnings(as.numeric(data[,index]))
data <- na.omit(data)
#Invalid state input or no observations
states <- table(data$State)
if (!state %in% names(states)) {
stop("invalid state")
}
#Slice our data by the given state and sort it by outcome and hospital name.
slice <- subset(data, State==state)
slice <- slice[order(slice[,index], slice[,2], na.last=TRUE),2] #this is ordered by rate
slice <- na.omit(slice)
num <- ifelse(num == "best", 1, ifelse(num == "worst", length(slice), as.numeric(num)))
#Get hospital name for the given rank by its 30-day mortality rate.
slice[num]
}
rankall <- function(outcomeChr, rankObj = "best") {
# --- Init loading outcome data
outcomeDfr <- read.csv("outcome-of-care-measures.csv", colClasses="character")
# --- Coerce character into numeric
suppressWarnings(outcomeDfr[, 11] <- as.numeric(outcomeDfr[, 11]))
suppressWarnings(outcomeDfr[, 17] <- as.numeric(outcomeDfr[, 17]))
suppressWarnings(outcomeDfr[, 23] <- as.numeric(outcomeDfr[, 23]))
# --- Create a data frame of freq by state Remove row.names
tableDfr <- data.frame(State = names(tapply(outcomeDfr$State, outcomeDfr$State,
length)), Freq = tapply(outcomeDfr$State, outcomeDfr$State, length))
rownames(tableDfr) <- NULL
# --- Create a data frame of possible inputs and respective columns
inputDfr <- data.frame(Outcome = c("heart attack", "heart failure", "pneumonia"),
Col = c(11, 17, 23))
# --- Check that outcome is valid
if (nrow(inputDfr[inputDfr$Outcome == outcomeChr, ]) == 0)
stop("invalid outcome")
# --- Assert create an empty vector Add column rank for debug
nameChr <- character(0)
# rankChr <- character(0)
# --- Return hospital name in that state with the ranked THIRTY(30)-day
# death rate Create a data frame with given ONE (1) state Determine the
# relevant column Reorder the new data frame from best to worst
for (stateChr in tableDfr$State) {
stateDfr <- outcomeDfr[outcomeDfr$State == stateChr, ]
colNum <- inputDfr[inputDfr$Outcome == outcomeChr, 2]
stateDfr <- stateDfr[complete.cases(stateDfr[, colNum]), ]
stateDfr <- stateDfr[order(stateDfr[, colNum], stateDfr$Hospital.Name),
]
# --- Convert 'best' and 'worst' to numeric Determine the relevant row
if (rankObj == "best")
rankNum <- 1 else if (rankObj == "worst")
rankNum <- nrow(stateDfr) else suppressWarnings(rankNum <- as.numeric(rankObj))
# --- Append hospital name to character vector
nameChr <- c(nameChr, stateDfr[rankNum, ]$Hospital.Name)
# rankChr <- c( rankChr, rankNum )
}
# --- Return value is a data frame (hospital, state)
return(data.frame(hospital = nameChr, state = tableDfr$State))
}
rankhospital("IA","pneumonia","worst")
best("WA","heart attack")
rankall("pneumonia")
rankall("pneumonia","worst")
rankhospital("MA","heart attack")
rankall <- function(outcomeChr, rankObj = "best") {
# --- Init loading outcome data
outcomeDfr <- read.csv("outcome-of-care-measures.csv", colClasses="character")
# --- Coerce character into numeric
suppressWarnings(outcomeDfr[, 11] <- as.numeric(outcomeDfr[, 11]))
suppressWarnings(outcomeDfr[, 17] <- as.numeric(outcomeDfr[, 17]))
suppressWarnings(outcomeDfr[, 23] <- as.numeric(outcomeDfr[, 23]))
# --- Create a data frame of freq by state Remove row.names
tableDfr <- data.frame(State = names(tapply(outcomeDfr$State, outcomeDfr$State,
length)), Freq = tapply(outcomeDfr$State, outcomeDfr$State, length))
rownames(tableDfr) <- NULL
# --- Create a data frame of possible inputs and respective columns
inputDfr <- data.frame(Outcome = c("heart attack", "heart failure", "pneumonia"),
Col = c(11, 17, 23))
# --- Check that outcome is valid
if (nrow(inputDfr[inputDfr$Outcome == outcomeChr, ]) == 0)
stop("invalid outcome")
# --- Assert create an empty vector Add column rank for debug
nameChr <- character(0)
# rankChr <- character(0)
# --- Return hospital name in that state with the ranked THIRTY(30)-day
# death rate Create a data frame with given ONE (1) state Determine the
# relevant column Reorder the new data frame from best to worst
for (stateChr in tableDfr$State) {
stateDfr <- outcomeDfr[outcomeDfr$State == stateChr, ]
colNum <- inputDfr[inputDfr$Outcome == outcomeChr, 2]
stateDfr <- stateDfr[complete.cases(stateDfr[, colNum]), ]
stateDfr <- stateDfr[order(stateDfr[, colNum], stateDfr$Hospital.Name),
]
# --- Convert 'best' and 'worst' to numeric Determine the relevant row
if (rankObj == "best")
rankNum <- 1 else if (rankObj == "worst")
rankNum <- nrow(stateDfr) else suppressWarnings(rankNum <- as.numeric(rankObj))
# --- Append hospital name to character vector
nameChr <- c(nameChr, stateDfr[rankNum, ]$Hospital.Name)
# rankChr <- c( rankChr, rankNum )
}
# --- Return value is a data frame (hospital, state)
return(data.frame(hospital = nameChr, state = tableDfr$State))
}
rm(list=ls())
ls()
library("OIdata", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("openintro", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
rm(list=ls())
ls()
library("DAAG", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
demo()
demo(image)
demo(scoping)
demo(lattice)
ls()
n
states
quit()
install.packages("HSAUR")
install.packages(c("akima", "chron", "Ime4", "mcmc", "odesolve", "spdep", "spatstat", "tree"))
swirl()
library(swirl)
swirl
swirl()
mydf <- read.csv(path2csv,stringAsFactors = FALSE)
path2csv
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, packaage, country)
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -5:20)
c(-5:20)
-5:20
-(5:20)
select(cran, -(5:20))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version =="3.1.1", country =="US",)
filter(cran, r_version =="3.1.1", country =="US")
?Comparison
filter(cran, r_version <="3.0.2", country =="IN")
filter(cran, r_version <="3.0.2" | country =="IN")
filter(cran, country == "US" | country =="IN")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r.version))
filter(cran, r.version == !is.na)
filter(cran, r_version == !is.na)
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(ip_id, package, size)
cran3 <- select(cran,ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
quit()
ReligionSurvey <- read.csv("~/Desktop/ReligionSurvey.csv")
View(ReligionSurvey)
god <-ReligionSurvey$Believe.inGod
talbe(god)
table(god)
god
god <-ReligionSurvey$Believe.in.God
table(God)
table(god)
summary(god)
barplot(table(x))
hist(god)
crisis <-ReligionSurvey$Pray.during.Crisis
table(god,crisis)
barplot(table(god,crisis))
str(god)
god
mosaicplot(table(god,crisis))
looksee <- table(god,crisis)
class(looksee)
looksee
str(looksee)
summary(ReligionSurvey)
prob.table(looksee)
prop.table(looksee)
friends<-ReligionSurvey$Friends.have.same.religion
table(god,friends)
prop.table(table(god,friends))
god
summary(god)
barplot(god)
boxplot(god)
table(god)
bully<-ReligionSurvey$Bullied.b.c.Religion
table(bull)
table(bully)
table(god,bully)
prop.table(table(god,bully))
prop.table(table(god))
write.table(god,file="myfile.csv",row.names=F)
write.table(looksee,file="myfile2.csv",row.names=F)
write.table(looksee,file="myfile2.csv",row.names=F,col.names=F)
dim(looksee)
write.table(looksee,file="myfile2.csv",row.names=T,col.names=T)
prop.table(table(god))
write.csv(looksee,file="myfile2.csv",row.names=F,col.names=F)
write.csv(looksee,file="myfile2.csv",row.names=F,col.names=T)
write.csv(looksee,file="myfile2.csv",row.names=T,col.names=T)
ReligionSurvey.Gender
ReligionSurvey$Gender
tabel(ReligionSurvey.Generg)
table(ReligionSurvey.Gender
)
table(ReligionSurvey$Gender)
class(ReligionSurvey)
summary(ReligionSurvey)
gender<-RelgionSurvey$gender
ReligionSurvey
gender<-ReligionSurvey$gender
grade<-ReligionSurvey$Grade
spiritual<-ReligionSurvey$Spiritual.
Hawk1<-data.frame(gender,grade,spiritual)
Hawk1<-data.frame(gender,grade)
Hawk1<-data.frame(grade,spiritual)
summary(Hawk1)
table(Hawk1)
ftable(Hawk1)
tray <- ftable(Hawk1)
write.csv(tray,file="myfile2.csv",row.names=T,col.names=T)
ReligionSemantics <- read.csv("~/Desktop/ReligionSurvey.csv")
View(ReligionSurvey)
View(ReligionSemantics)
NewGod<-ReligionSemantics$Spiritual
NewGender<-ReligionSemantics$Gender
table(NewGender,NewGod)
summary(ReligionSemantics)
prop.table(table(NewGender,NewGod))
hello<-table(NewGender,NewGod)
write.csv(hello,file="myfile2.csv",row.names=T)
table(NewGender)
NewParent<-ReligionSemantics$Same.as.Parents
table(NewGender,NewParent)
NewGrade<-ReligionSemantics$Grade
table(NewGrade,NewParent)
quit()
pref<-ReligionSemantics$Religious.Preference
Bgod<-ReligionSemantics$Believe.in.God
Bheaven<-ReligionSemantics$Believe.in.heaven
Bhell<-ReligionSemnatics$Believe.in.Hell
Bhell<-ReligionSemantics$Believe.in.Hell
BothersGo<-ReligionSemantics$Other.religions.go.to.hell
NewGender
NewGrade
NewSpiritual
NewSpiritual<-ReligionSemantics$Spiritual
BParents<-ReligionSemantics$Same.as.Parents
BBasis<-ReligionSemantics$Reason.Traditionor.Religion
BAttend<-ReligionSemantics$Church.Attendance
BAttend
table(BAttend)
table(pref,BAttend)
table(pref,ReligionSemantic$Praying)
table(pref,ReligionSemantics$Praying)
pref
table(pref)
ftable(ReligionSemantics, col.vars= "Gender")
Q1g <-table(BBasis,NewGender)
Q1g
prop.table(Q1g,margin=1)
prop.table(Q1g,margin=2)
Q1gGrade <-table(BBasis,NewGender,NewGrade)
Q1gGrade
prop.table(Q1gGrade,margin=2)
Q1gr<-table(BBasis,NewGrade)
Q1gr
Q1rel<-table(BBasis,pref)
Q1rel
prop.table(Q1rel,margin=1)
prop.table(Q1rel,margin=2)
Q1rel
Trial<-table(pref,BotherGo)
Trial<-table(pref,BothersGo)
Trial
prop.table(Trial,margin=1)
prop.table(Trial,margin=2)
Trial2<-table(pref,NewSpiritual)
Trial2
prop.table(Trial2,margin=1)
prop.table(Trial2,margin=2)
Bhell<-ReligionSemantics$Believe.in.Hell
write.csv(hello,file="myfile2.csv",row.names=T)
byPref<-prob.table(Trial2,margin=2)
byPref<-prop.table(Trial2,margin=2)
write.csv(byPref,file=myfile3.csv,row.names=T)
write.csv(byPref,file="myfile3.csv",row.names=T)
quit()
Semantics <- read.csv("~/Desktop/Semantics.csv")
View(Semantics)
summary(Semantics)
Overview<-summary(Semantics)
write.csv(Overview,file="Overview.csv",row.names=T)
ftable(Overview)
prefs
prefs<-Semantics$Religious.Preference
Bgod<-Semantics$Believe.in.God
Bheaven<-Semanitcs$Believe.in.heaven
Bheaven<-Semanitics$Believe.in.heaven
Bheaven<-Semantics$Believe.in.heaven
Bhell<-Semantics$Believe.in.hell
Q2Counts<-table(prefs,Bgod)
Q2Counts
prefs
table(prefs)
Q2Counts
summary(prefs)
ftable(Q2Counts)
write.csv(Q2Counts,file="GodByReligion.csv",row.names=T)
prop.table(Q2Counts,margin=1)
PercentByReligion<-prop.table(Q2Counts,margin=1)
write.csv(PercentByReligion,file="GodByReligionPercent.csv",row.names=T)
PercentByGod<-prop.table(Q2Counts,margin=2)
write.csv(PercentByGod,file="ReligionByGodPercent.csv",row.names=T)
HeavenByReligionCounts<-table(prefs,Bheaven)
write.csv(HeavenByReligionCounts,file="HeavenByRelgionCounts.csv",row.names=T)
HPercentByRelgion<-prop.table(HeavenByReligionCounts,margin=1)
PercentByHeaven<prop.table(HeavenByReligionCounts,margin=2)
PercentByHeaven<-prop.table(HeavenByReligionCounts,margin=2)
write.csv(HPercentByReligion,file="HeavenByRelgionPercent.csv",row.names=T)
write.csv(HPercentByRelgion,file="HeavenByReligionPercent.csv",row.names=T)
write.csv(PercentByHeaven,file="ReligionByHeavenPercent.csv",row.names=T)
HellByReligionCounts<-table(prefs,Bhell)
length(Bhell)
Bhell<-Semantics$Believe.in.Hell
HellByReligionCounts<-table(prefs,Bhell)
write.csv(HellByReligionCounts,file="HellByReligionCounts.csv",row.names=T)
HellByReligionPercents<-prop.table(HellByReligionCounts,margin=1)
write.csv(HellByReligionPercents,file="HellByReligionPercents.csv",row.names=T)
ReligionByHellPercents<-prop.table(HellByReligionCounts,margin=2)
write.csv(ReligionByHellPercents,file="ReligionByHellPercents.csv",row.names=T)
HeavenAndOrHell<-table(Bheaven,Bhell)
HeavenAndOrHell
write.csv(HeavenAndOrHell,file="HeavenAndOrHellCounts.csv",row.names=T)
ftable(HeavenAndOrHell)
Htable<-ftable(HeavenAndOrHell)
write.csv(Htable,file="HeavenAndOrHellCounts.csv",row.names=T)
Rschool<-Semantics$Religion....School
Rschool
Rschool<-Semantics$Religion@School
Semantics$Religion...School
Rschool<-Semantics$Religion@...School
Rschool<-Semantics$Religion...School
Rbullied<-Semantics$Bullied.b.c.Religion
RFriends<-Semantics$Friends.have.same.religion
OpenAtSchool<-table(prefs,Rschool)
BulliedAtSchool<-table(prefs,Rbullied)
FriendsSame<-table(prefs,RFriends)
OpenAtSchool
write.csv(OpenAtSchool,file="OpenAtSchoolCounts.csv",row.names=T)
prop.table(OpenAtSchool, margins=1)
prop.table(OpenAtSchool, margin=1)
prop.table(OpenAtSchool, margin=2)
ReligionAndOpenByPercent<-prop.table(OpenAtSchool, margin=1)
OpenAndReligionByPercent<prop.table(OpenAtSchool,margin=2)
OpenAndReligionByPercent<-prop.table(OpenAtSchool,margin=2)
write.csv(OpenAtSchool,file="ReligionAndOpenByPercent.csv",row.names=T)
write.csv(RelgionAndOpenByPercent,file="ReligionAndOpenByPercent.csv",row.names=T)
write.csv(ReligionAndOpenByPercent,file="ReligionAndOpenByPercent.csv",row.names=T)
write.csv(OpenAndReligionByPercent,file="OpenAndReligionByPercent.csv",row.names=T)
BulliedAtSchool
write.csv(BulliedAtSchool,file="BulliedAtSchoolCounts.csv",row.names=T)
prop.table(BulliedAtSchool,margin=1)
BulliedByReligion<-prop.table(BulliedAtSchool,margin=1)
write.csv(BulliedByReligio,file="BulliedAtSchoolPercentByReligion.csv",row.names=T)
write.csv(BulliedByReligion,file="BulliedAtSchoolPercentByReligion.csv",row.names=T)
ReligionByBullied<-prop.table(BulliedAtSchool,margin=2)
write.csv(RelgionByBullied,file="BulliedAtSchoolPercentByBullied.csv",row.names=T)
write.csv(ReligionByBullied,file="BulliedAtSchoolPercentByBullied.csv",row.names=T)
FriendsSame
write.csv(FriendsSame,file="FriendsSameCount.csv",row.names=T)
FriendsSameByReligion<-prop.table(FriendsSame,margin=1)
FriendsSameByReligion
write.csv(FriendsSameByReligion,file="FriendsSameByReligionPercent.csv",row.names=T)
ReligionSameByFriends<-prop.table(FriendsSame,margin=2)
ReligionSameByFriends<-prop.table(FriendsSame,margin=2)
write.csv(ReligionSameByFriends,file="RelgionSameByFriendsPercent.csv",row.names=T)
InfluenceOnPolitics<-Semantics$Religious.influence.on.politics
PoliticalViews<-Semantics$Political.views
InfluenceByReligion<-table(prefs,InfluenceOnPolitics)
PolViewsByRelgion<-table(prefs,PoliticalViews)
ViewsOnInfluence<-table(PoliticalViews,InfluenceOnPolitics)
ViewsOnInfluence
write.csv(InfluenceByReligion,file="InfluenceByReligionCounts.csv",row.names=T)
write.csv(PolViewsByRelgion,file="PoliticalViewsByReligion.csv",row.names=T)
write.csv(PolViewsByRelgion,file="PolitialViewsOnInfluenceOpinion.csv",row.names=T)
write.csv(ViewsOnInfluence,file="PolitialViewsOnInfluenceOpinion.csv",row.names=T)
write.csv(PolViewsByRelgion,file="PoliticalViewsByReligionCounts.csv",row.names=T)
InfluenceByReligionPercents<-prop.table(InfluenceByReligion,margin=1)
ReligionByInfluencePercents<-prop.table(InfluenceByReligion,margin=2)
PoliticalViewsByReligionPercents<-prop.table(PolViewsByRelgion,margin=1)
ReligionByPoliticalViewsPercents<-prop.table(PolViewsByRelgion,margin=2)
Rbullied
table(Rbullied)
write.csv(PoliticalViewsByReligionPercents,file="PoliticalViewsByReligionPercents.csv",row.names=T)
write.csv(ReligionByPoliticalViewsPercents,file="ReligionByPoliticalViewsPercents.csv",row.names=T)
write.csv(InfluenceByReligionPercents,file="InfluenceByReligionPercents.csv",row.names=T)
write.csv(ReligionByInfluencePercents,file="ReligionByInfluencePercents.csv",row.names=T)
quit()
prefs
BasicBreakout<-table(prefs,NewGender,NewGrade)
BasicBreakout
BreakoutTwo<-table(NewGender,NewGrade,prefs)
BreakoutTWo
BreakoutTwo
mosaicplot(BasicBreakout)
ftable(BasicBreakout)
inspectBasic<-ftable(BasicBreakout)
write.csv(inspectBasic,file="ReligionByGenderGrade.csv",row.names=T)
ReligionByGradeAndGenderCounts<-table(prefs,NewGrade)
ReligionByGender<-table(prefs,NewGender)
write.csv(ReligionByGradeAndGender,file="ReligionByGradeAndGender.csv",row.names=T)
write.csv(ReligionByGradeAndGenderCounts,file="ReligionByGradeAndGenderCounts.csv",row.names=T)
ReligionByGender
ReligionByGradeAndGenderPercents<-prop.table(ReligionByGradeAndGenderCounts,margin=1)
ReligionByGradeAndGenderPercents<-prop.table(ReligionByGradeAndGenderCounts,margin=1)
ReligionByGradeAndGenderPercents
ReligionByGenderPercents<-prop.table(ReligionByGender,margin=1)
write.csv(ReligionByGradeAndGenderPercents,file="ReligionByGradeAndGenderPercents.csv",row.names=T)
ReligionByGenderPercents
write.csv(ReligionByGenderPercents,file="ReligionByGenderPercents.csv",row.names=T)
quit()
GenderByReligionPercents<-prop.table(ReligionByGender,margin=2)
GenderByReligionPercents
GradeAndGenderByReligionPercents<-prop.table(ReligionByGradeAndGenderCounts,margin=2)
GradeAndGenderByReligionPercents
write.csv(GradeAndGenderByReligionPercent,file="GradeAndGenderByReligionPercents.csv",row.names=T)
write.csv(GradeAndGenderByReligionPercents,file="GradeAndGenderByReligionPercents.csv",row.names=T)
write.csv(GenderByReligionPercents,file="GenderByReligionPercents.csv",row.names=T)
NewAnalsysis<-table(prefs,NewGod)
NewAnalysis
NewAnalsysis
ftable(NewAnalsysis)
write.csv(NewAnalsysis,file="NewAnalysisCounts.csv",row.names=T)
Tradition<-Semantics$Reason.Traditionor.Religion
AnalysisTrad<-table(prefs,Tradition)
write.csv(AnalysisTrad,file="TraditionCounts.csv",row.names=T)
Parents<-Semanitcs$Same.as.Parents
Parents<-Semantics$Same.as.Parents
ParentsAnaly<-table(prefs,Parents)
write.csv(ParentsAnaly,file="ParentsCounts.csv",row.names=T)
HeavenQ<-table(prefs,NewHeaven)
HeavenQ<-table(prefs,Rheaven)
NewHeaven<-Semantics$Believe.in.heaven
HeavenQ<-table(prefs,NewHeaven)
write.csv(HeavenQ,file="HeavenCounts.csv",row.names=T)
Tradition
AnalysisTrad
ImportantQ<-Semantics$Important.to.have.religion
Important<-table(prefs,ImportantQ)
write.csv(Important,file="ImportantCounts.csv",row.names=T)
Groups<-Semantics$Religious.Peer.Groups
GroupsQ<-table(prefs,Groups)
write.csv(GroupQ,file="GroupCounts.csv",row.names=T)
write.csv(GroupsQ,file="GroupCounts.csv",row.names=T)
ls()
robert
ls()
Rschool
ReligionSameByFriends
class(ReligionSameByFriends)
library(swirl)
swirl()
quit()
setwd("~/Documents/Data Science Projects/Exploratory Data Analysis Projects")
setwd("~/Documents/Data Science Projects/Exploratory Data Analysis Projects/ExData_Plotting1")
